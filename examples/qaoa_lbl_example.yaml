ZapOSApiVersion: v1alpha1
kind: Workflow

resources:
- name: z-quantum-core
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-core.git"
    branch: "master"
- name: z-quantum-qaoa
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-qaoa.git"
    branch: "master"
- name: z-quantum-optimizers
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-optimizers.git"
    branch: "master"
- name: qe-qhipster
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/qe-qhipster.git"
    branch: "master"
- name: qe-openfermion
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/qe-openfermion.git"
    branch: "master"


metadata:
  generateName: qaoa-example-

spec:
  entrypoint: main
  arguments:
    parameters:
    - s3-bucket: quantum-engine
    - s3-key: projects/qaoa/
    - docker-image: z-quantum-default
    - docker-tag: latest
    - n-nodes: "5"
    - total-n-layers: "3"

  templates:
  - name: main
    steps:
    - - name: generate-graph
        template: generate-erdos-renyi-graph
        arguments:
          parameters:
            - n-nodes: "{{workflow.parameters.n-nodes}}"
            - edge-probability: "0.8"
            - resources: [z-quantum-core]
            - docker-image: "{{workflow.parameters.docker-image}}"
            - docker-tag: "{{workflow.parameters.docker-tag}}"
    - - name: get-maxcut-hamiltonian
        template: get-maxcut-hamiltonian
        arguments:
          parameters:
          - resources: [z-quantum-core, qe-openfermion, z-quantum-qaoa]
          - docker-image: "{{workflow.parameters.docker-image}}"
          - docker-tag: "{{workflow.parameters.docker-tag}}"
          artifacts:
          - graph:
              from: '{{steps.generate-graph.outputs.artifacts.graph}}'

      - name: build-uniform-parameter-grid
        template: build-uniform-parameter-grid
        arguments:
          parameters:
          - number-of-params-per-layer: "2"
          - n-layers: "1"
          - min-value: "0"
          - max-value: "3.14159265359"
          - step: "0.314159265359"
          - resources: [z-quantum-core]
          - docker-image: "{{workflow.parameters.docker-image}}"
          - docker-tag: "{{workflow.parameters.docker-tag}}"


    - - name: generate-random-initial-ansatz-params
        template: generate-random-ansatz-params
        arguments:
          parameters:
          - number-of-params: "2"
          - min-val: "-0.01"
          - max-val: "0.01"
          - resources: [z-quantum-core]
          - docker-image: "{{workflow.parameters.docker-image}}"
          - docker-tag: "{{workflow.parameters.docker-tag}}"

      - name: generate-fixed-ansatz-params
        template: generate-random-ansatz-params
        arguments:
          parameters:
          - number-of-params: "0"
          - min-val: "-0.01"
          - max-val: "0.01"
          - resources: [z-quantum-core]
          - docker-image: "{{workflow.parameters.docker-image}}"
          - docker-tag: "{{workflow.parameters.docker-tag}}"


    - - name: optimize-lbl
        template: optimize-lbl
        arguments:
          parameters:
          - total-n-layers: "{{workflow.parameters.total-n-layers}}"
          - current-n-layers: "1"
          artifacts:
          - params:
              from: '{{steps.generate-random-initial-ansatz-params.outputs.artifacts.params}}'
          - fixed-params:
              from: '{{steps.generate-fixed-ansatz-params.outputs.artifacts.params}}'
          - hamiltonian:
              from:  '{{steps.get-maxcut-hamiltonian.outputs.artifacts.hamiltonian}}'
          - parameter-grid:
              from: '{{steps.build-uniform-parameter-grid.outputs.artifacts.parameter-grid}}'
    
  # Optimize a variational circuit layer-by-layer
  - name: optimize-lbl
    inputs:
      parameters:
      - name: current-n-layers
      artifacts:
      - name: params
      - name: fixed-params
      - name: hamiltonian
      - name: parameter-grid

    steps:
    # Optimize the active layer and all preceding layers using black-box optimization
    - - name: optimize-variational-circuit
        template: optimize-variational-circuit
        arguments:
          parameters:
          - ansatz-specs: "{'module_name': 'zquantum.qaoa.farhi_ansatz', 'function_name': 'QAOAFarhiAnsatz', 'number_of_layers': {{inputs.parameters.current-n-layers}}}"
          - backend-specs: "{'module_name': 'qeqhipster.simulator', 'function_name': 'QHipsterSimulator'}"
          - optimizer-specs: "{'module_name': 'zquantum.optimizers.grid_search', 'function_name': 'GridSearchOptimizer', 'options': {'keep_value_history': True}}"
          - cost-function-specs: "{'module_name': 'zquantum.core.cost_function', 'function_name': 'AnsatzBasedCostFunction', 'estimator-specs': { 'module_name': 'zquantum.core.estimator', 'function_name': 'ExactEstimator'}}"
          - resources: [z-quantum-core, qe-openfermion, z-quantum-optimizers, qe-qhipster, z-quantum-qaoa]
          - docker-image: qe-qhipster
          - docker-tag: latest
          artifacts:
          - initial-parameters:
              from: '{{inputs.artifacts.params}}'
          - fixed-parameters:
              from: '{{inputs.artifacts.fixed-params}}'
          - qubit-operator:
              from: '{{inputs.artifacts.hamiltonian}}'
          - parameter-grid:
              from: '{{inputs.artifacts.parameter-grid}}'

    - - name: generate-random-ansatz-params
        template: generate-random-ansatz-params
        arguments:
          parameters:
          - min-val: "-0.01"
          - max-val: "0.01"
          - number-of-params: "2"
          - resources: [z-quantum-core]
          - docker-image: "{{workflow.parameters.docker-image}}"
          - docker-tag: "{{workflow.parameters.docker-tag}}"

    # Append the parameters for the active layer to parameters for previous layers
      - name: combine-fixed-ansatz-params
        template: combine-ansatz-params
        arguments:
          parameters:
          - resources: [z-quantum-core]
          - docker-image: "{{workflow.parameters.docker-image}}"
          - docker-tag: "{{workflow.parameters.docker-tag}}"
          artifacts:
          - params1:
              from: '{{inputs.artifacts.fixed-params}}'
          - params2:
              from: '{{steps.optimize-variational-circuit.outputs.artifacts.optimized-parameters}}'


    # Recursively call another optimization if there are more layers to add
    - - name: optimize-lbl
        template: optimize-lbl
        arguments:
          parameters:
            - current-n-layers: '{{inputs.parameters.current-n-layers}} + 1'
          artifacts:
          - params:
              from: '{{steps.generate-random-ansatz-params.outputs.artifacts.params}}'
          - fixed-params:
              from: '{{steps.combine-fixed-ansatz-params.outputs.artifacts.combined-params}}'
          - hamiltonian:
              from: '{{inputs.artifacts.hamiltonian}}'
          - parameter-grid:
              from: '{{inputs.artifacts.parameter-grid}}'
        when: '{{workflow.parameters.total-n-layers}} != {{inputs.parameters.current-n-layers}}'
